@page "/Map"

@inject IJSRuntime JsRunTime


<h1>{Test side for Map}</h1>

<div class="mapid" id="mapid"></div>

<button class="btn btn-primary" @onclick="button_add">Tilføje markers og linjer</button>
<button class="btn btn-primary" @onclick="button_remove">Fjerne markers og linjer</button>
<br>


@*<div @ref="mapid" @onmousedown="CreateMarker" id="mapid"></div>*@

@*<p>@Coordinates</p>*@



@code {
    ElementReference mapid;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JsRunTime.InvokeVoidAsync("Main.Map.createMap");
            StateHasChanged();
        }

    }

    private async void button_add()
    {
        await JsRunTime.InvokeVoidAsync("Main.Map.addMarkersAndLines");
    }


    private async void button_remove()
    {
        await JsRunTime.InvokeVoidAsync("Main.Map.removeMarkersAndLines");
    }


    @*
        protected string Coordinates { get; set; }

        protected void Mouse_Move(MouseEventArgs e)
        {
            Coordinates = $"X = {e.ClientX } Y = {e.ClientY}";
        }

        private async void CreateMarker()
        {
            await JsRunTime.InvokeVoidAsync("Main.onMapClick");
        }

    *@
}
